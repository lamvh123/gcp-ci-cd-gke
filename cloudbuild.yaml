steps:
  # Build helm image image
  - name: gcr.io/cloud_builders/docker
    args:
      - build
      - -t
      - gcr.io/$PROJECT_ID/helm
      - helm/Dockerfile

  # Push my-app image to Google Cloud Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/my-app:$COMMIT_SHA
  # create namspace
  - name: gcr.io/cloud-builders/kubectl
    args:
      - create
      - namespace
      - kafka
    allowExitCodes: [1]
    env:
      - CLOUDSDK_COMPUTE_ZONE=$_CUSTOM_ZONE
      - CLOUDSDK_CONTAINER_CLUSTER=$_CUSTOM_CLUSTER
      - KUBECONFIG=/workspace/.kube/config
  # Deploy with Helm
  - name: gcr.io/$PROJECT_ID/helm
    args:
      - repo
      - add
      - strimzi
      - https://strimzi.io/charts/
    env:
      - CLOUDSDK_COMPUTE_ZONE=$_CUSTOM_ZONE
      - CLOUDSDK_CONTAINER_CLUSTER=$_CUSTOM_CLUSTER
      - KUBECONFIG=/workspace/.kube/config
  - name: gcr.io/$PROJECT_ID/helm
    args:
      - repo
      - update
    env:
      - CLOUDSDK_COMPUTE_ZONE=$_CUSTOM_ZONE
      - CLOUDSDK_CONTAINER_CLUSTER=$_CUSTOM_CLUSTER
      - KUBECONFIG=/workspace/.kube/config
  # - name: gcr.io/$PROJECT_ID/helm
  #   args:
  #     - uninstall
  #     - strimzi
  #     - --namespace
  #     - kafka
  #   env:
  #     - CLOUDSDK_COMPUTE_ZONE=$_CUSTOM_ZONE
  #     - CLOUDSDK_CONTAINER_CLUSTER=$_CUSTOM_CLUSTER
  #     - KUBECONFIG=/workspace/.kube/config
  - name: gcr.io/$PROJECT_ID/helm
    args:
      - install
      - strimzi
      - strimzi/strimzi-kafka-operator
      - --namespace
      - kafka
    allowExitCodes: [1]
    env:
      - CLOUDSDK_COMPUTE_ZONE=$_CUSTOM_ZONE
      - CLOUDSDK_CONTAINER_CLUSTER=$_CUSTOM_CLUSTER
      - KUBECONFIG=/workspace/.kube/config
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Deploy
    entrypoint: 'bash'
    args:
      - '-c'
      - > 
        gcloud deploy releases create release-$BUILD_ID
        --delivery-pipeline=my-demo-app
        --region=us-central1
timeout: 1200s
substitutions:
  _CUSTOM_ZONE: us-central1-c
  _CUSTOM_CLUSTER: cluster-1
